legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
tapply(value, list(result < 6, result >= 6))
# b
tapply(value)
# b
prop.table(value)
# b
table(value)
prop.table(value)
# b
?proportions()
# b
proportions(value)
# b
proportions(value, x >= 6)
# b
proportions(value, resullt >= 6)
# b
proportions(value, value$resullt >= 6)
# b
proportions(value, value$result >= 6)
# b
proportion <- function(x, y) {
count <- 0
for (item in 1:length(x)) {
if item >= 6 {
count <- count + 1
}
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
}
for (item in x) {
if item >= 6 {
count <- count + 1
}
}
count <- count + 1}
for (item in x) {
if item >= 6 {
count <- count + 1}
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
# b
proportion <- function(x, y) {
count <- 0
for (item in x) {
if item >= 6 {
count <- count + 1}
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
}
# b
proportion <- function(x, y) {
count <- 0
for (item in x) {
if item >= 6 {
count <- count + 1}
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
}
if (item >= 6) {
count <- count + 1}
for (item in 1:x) {
if (item >= 6) {
count <- count + 1}
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
count <- c(count, item)
# b
proportion <- function(x, y) {
for (item in 1:x) {
if (item >= 6) {
count <- c(count, item)
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
}
# b
proportion <- function(x, y) {
for (item in 1:x) {
if (item >= 6) {
count <- c(count, item)
}
result <- length(x)/length(count)
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
}
proportion(value, 6)
proportion(value, 6)
sample(ipod, 20)
# b
proportion <- function(x, y) {
for (item in 1:x) {
if (item >= 6) {
count <- c(count, item)
}
result <- length(x)/length(count)
return(print("Ti le bai hat co do dai tu 6 phut tro len la: ", result))
}
proportion(value, 6)
# b
proportion <- function(x, y) {
for (item in 1:length(x)) {
if (item >= 6) {
count <- c(count, item)
}
result <- length(x)/length(count)
return(print("Ti le bai hat co do dai tu 6 phut tro len la: ", result))
}
proportion(value, 6)
# b
count(value)
# b
count(value)
ipod <- sample(c(rep(1, 250),
rep(2, 300),
rep(3, 600),
rep(4, 800),
rep(5, 550),
rep(6, 350),
rep(7, 100),
rep(8, 25),
rep(9, 20),
rep(10, 5)))
# a
result <- c()
for (x in 1:50) {
sp <- sample(ipod, 25)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
+
}
ipod <- sample(c(rep(1, 250),
rep(2, 300),
rep(3, 600),
rep(4, 800),
rep(5, 550),
rep(6, 350),
rep(7, 100),
rep(8, 25),
rep(9, 20),
rep(10, 5)))
# a
result <- c()
for (x in 1:50) {
sp <- sample(ipod, 25)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
library(ggplot2)
library(plotly)
plot <- value %>%
ggplot(aes(x = result)) +
geom_histogram(fill = "#FBF4E9", color="#6ECB63", alpha=1, bins = 10) +
labs(title = "Sample",
x = "Value",
y = "Count") +
theme_bw() +
theme(axis.text.x = element_text(vjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
count(value)
# b
propor <- function(x, y) {
for (item in 1:length(x)) {
count <- 0
if (item >= 6) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value, 6)
# b
propor <- function(x, y) {
for (item in x) {
count <- 0
if (item >= 6) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value, 6)
propor(value$result, 6)
# b
propor <- function(x, y) {
for (item in 1:length(x)) {
count <- 0
if (item >= 6) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value$result, 6)
table(value)
# b
propor <- function(x, y) {
for (item in 1:length(x)) {
count <- 0
if (item >= y) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value$result, 6)
length(value$result >= 6)
# b
up6 <- value(value$result >= 6)
# b
up6 <- value$result >= 6
# b
up6 <- filter(value, value$result >= 6)
up6
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", length(up6)/length(value))
# b
up6 <- filter(value, value$result >= 6)
up6
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", length(up6)/length(value))
length(up6)
length(value)
View(up6)
length(up6$result)
result <- length(up6$result)/length(value$result)
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", result)
result <- length(up6$result)/length(value$result)
result
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", result)
print(result)
print("Ti le", result)
# a
result <- c()
for (x in 1:500) {
sp <- sample(ipod, 25)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
library(ggplot2)
library(plotly)
plot <- value %>%
ggplot(aes(x = result)) +
geom_histogram(fill = "#FBF4E9", color="#6ECB63", alpha=1, bins = 10) +
labs(title = "Sample",
x = "Value",
y = "Count") +
theme_bw() +
theme(axis.text.x = element_text(vjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
up6 <- filter(value, value$result >= 6)
up6
result <- length(up6$result)/length(value$result)
result
# a
result <- c()
for (x in 1:30) {
sp <- sample(ipod, 30)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
library(ggplot2)
library(plotly)
plot <- value %>%
ggplot(aes(x = result)) +
geom_histogram(fill = "#FBF4E9", color="#6ECB63", alpha=1, bins = 10) +
labs(title = "Sample",
x = "Value",
y = "Count") +
theme_bw() +
theme(axis.text.x = element_text(vjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
up6 <- filter(value, value$result >= 6)
up6
result <- length(up6$result)/length(value$result)
result
Group <- sample(rep(1, 18), rep(2, 14))
Group
Group <- sample(c(rep(1, 18), rep(2, 14)))
Group
Group <- c(rep(1, 18), rep(2, 14))
Group
group <- c(rep(1, 18), rep(2, 14))
Group <- group
Group[group = 1] <- "Urban"
Group[group = 2] <- "Rural"
Group
# Tao ID
ID <- c(1:18, 1:14)
group <- c(rep(1, 18), rep(2, 14))
Group <- group
Group[group = 1] <- "Urban"
Group[group = 2] <- "Rural"
Group
Group[group == 1] <- "Urban"
Group[group == 2] <- "Rural"
Group
ID <- c(1:18, 1:14)
group <- c(rep(1, 18), rep(2, 14))
Group <- group
Group[group == 1] <- "Urban"
Group[group == 2] <- "Rural"
Age <- c(109, 113, 115, 116, 119, 120, 121, 124, 126, 129,
130, 133, 134, 135, 137, 139, 141, 142, 121, 121,
128, 129, 131, 132, 133, 134, 138, 138, 138, 140,
140, 140)
Height <- c(137.6, 147.8, 136.8, 140.7, 132.7, 145.4, 135.0, 133.0, 148.5,
148.3, 147.5, 148.8, 133.2, 148.7, 152.0, 150.6, 165.3, 149.9,
139.0, 140.9, 134.9, 149.5, 148.7, 131.0, 142.3, 139.9, 142.9,
147.7, 147.7, 134.6, 135.8, 148.5)
data <- data.frame(Group, ID, Age, Height)
data
View(data)
# Kiem dinh chung minh co su khac biet ve do tuoi
model1 <- lm(Height ~ Group + Age + Group:Age)
View(model1)
View(model1)
model2 <- lm(Height ~ Group + Age)
model3 <- lm(Height ~ Age)
anova(model1, model2, model3)
summary(model2)
View(data)
# Tao data
ID <- c(1:18, 1:14)
group <- c(rep(1, 18), rep(2, 14))
Group <- group
Group[group == 1] <- "Urban"
Group[group == 2] <- "Rural"
Group <- as.factor(Group)
Age <- c(109, 113, 115, 116, 119, 120, 121, 124, 126, 129,
130, 133, 134, 135, 137, 139, 141, 142, 121, 121,
128, 129, 131, 132, 133, 134, 138, 138, 138, 140,
140, 140)
Height <- c(137.6, 147.8, 136.8, 140.7, 132.7, 145.4, 135.0, 133.0, 148.5,
148.3, 147.5, 148.8, 133.2, 148.7, 152.0, 150.6, 165.3, 149.9,
139.0, 140.9, 134.9, 149.5, 148.7, 131.0, 142.3, 139.9, 142.9,
147.7, 147.7, 134.6, 135.8, 148.5)
data <- data.frame(Group, ID, Age, Height)
data
View(data)
model1 <- lm(Height ~ Group + Age + Group:Age)
model2 <- lm(Height ~ Group + Age)
model3 <- lm(Height ~ Age)
anova(model1, model2, model3)
summary(model2)
# Chuyen sang thu muc lam viec
setwd('C:/Users/ASUS/OneDrive/Máy tính/crawler')
library(ggplot2)
library(plotly)
library(gapminder)
library(tidyverse)
library(viridis)
library(hrbrthemes)
library(dplyr)
library(plyr)
library(readr)
# Nhap du lieu
my_file <- list.files(pattern = "*.csv")
data <- ldply(my_file, read_csv)
View(data)
# Xem du lieu
head(data, 10)
names(data)
str(data)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#'
#' Xu li du lieu
#'
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
data$time_up <- as.Date(data$time_up, "%d/%m/%Y")
cols <- c("trademark", "brand", "style", "fuel")
data[cols] <- lapply(data[cols], factor)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#'
#' Phan tich thong ke mo ta
#'
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# summary
summary(data)
# table
table(data$trademark)    # So luong xe dang duoc rao ban
table(data$style)    # Phân khúc xe dang duoc rao ban
table(data$box_car)    # Hop so xe
table(data$local)    # T???nh thành bán xe
# quantile
quantile(data$price)    # Tu phan vi gia xe
quantile(data$KM)    # Tu phan vi so km da di
# correlation
data[c(5, 6, 10)]
# correlation
cor(data[c(5, 6, 10)], use = "everything", method = "pearson")
# Demo
# Hist
hist(data$price)
hist(data$year_product)
hist(data$KM)
# Pie
table(data$trademark)
pie(table(data$trademark))
pie(table(data$style))
# Bar
barplot(table(data$trademark))
table(data$status, data$trademark)
barplot(table(data$status, data$trademark), beside = TRUE)
table(data$origin, data$trademark)
barplot(table(data$origin, data$trademark))
table(data$box_car, data$style)
barplot(table(data$box_car, data$style), beside = TRUE)
table(data$fuel, data$trademark)
barplot(table(data$fuel, data$trademark))
# Box plot
boxplot(data$trademark ~ data$status)
boxplot(data$trademark ~ data$fuel)
boxplot(data$origin ~ data$status)
boxplot(data$origin ~ data$trademark)
boxplot(data$trademark ~ data$origin)
boxplot(data$style ~ data$status)
# Scatter plot
plot(data$price, data$trademark)
# Scatter plot
plot(data$year_product, data$trademark)
# Scatter plot
plot(data$trademark, data$price)
plot(data$brand, data$price)
plot(data$KM, data$price)
plot(data$price, data$KM)
plot(data$year_product, data$KM)
plot(data$trademark, data$price)
boxplot(data$year_product ~ data$KM)
boxplot(data$trademark ~ data$price)
plot(data$trademark, data$price)
# Loc xe moi, xe cu
new_car <- filter(data, data$status == "Mới")
old_car <- filter(data, data$status == "Đã qua sử dụng")
View(new_car)
View(data)
View(old_car)
old_car <- filter(data, data$status == "Đã qua sử dụng")
old_car <- filter(data, data$KM != 0)
View(old_car)
# Loc theo hang xe
Mer <- filter(data, data$trademark == "Mercedes-Benz")
View(Mer)
Audi <- filter(data, data$trademark == "Audi")
View(Audi)
LandRover <- filter(data, data$trademark == "Land Rover")
View(LandRover)
# Loc theo phan khuc xe
Sedan <- filter(data, data$style == "Sedan")
View(Sedan)
SUV <- filter(data, data$trademark == "SUV")
View(SUV)
View(Sedan)
SUV <- filter(data, data$trademark == "SUV")
SUV <- filter(data, data$trademark == "SUV")
SUV <- filter(data, data$style == "SUV")
View(SUV)
CUV <- filter(data, data$style == "CUV")
MPV <- filter(data, data$style == "MPV")
View(MPV)
