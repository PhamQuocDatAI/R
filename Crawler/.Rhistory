# a
result <- c()
for (x in 1:50) {
sp <- sample(ipod, 25)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
library(ggplot2)
library(plotly)
plot <- value %>%
ggplot(aes(x = result)) +
geom_histogram(fill = "#FBF4E9", color="#6ECB63", alpha=1, bins = 10) +
labs(title = "Sample",
x = "Value",
y = "Count") +
theme_bw() +
theme(axis.text.x = element_text(vjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
count(value)
# b
propor <- function(x, y) {
for (item in 1:length(x)) {
count <- 0
if (item >= 6) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value, 6)
# b
propor <- function(x, y) {
for (item in x) {
count <- 0
if (item >= 6) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value, 6)
propor(value$result, 6)
# b
propor <- function(x, y) {
for (item in 1:length(x)) {
count <- 0
if (item >= 6) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value$result, 6)
table(value)
# b
propor <- function(x, y) {
for (item in 1:length(x)) {
count <- 0
if (item >= y) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value$result, 6)
length(value$result >= 6)
# b
up6 <- value(value$result >= 6)
# b
up6 <- value$result >= 6
# b
up6 <- filter(value, value$result >= 6)
up6
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", length(up6)/length(value))
# b
up6 <- filter(value, value$result >= 6)
up6
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", length(up6)/length(value))
length(up6)
length(value)
View(up6)
length(up6$result)
result <- length(up6$result)/length(value$result)
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", result)
result <- length(up6$result)/length(value$result)
result
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", result)
print(result)
print("Ti le", result)
# a
result <- c()
for (x in 1:500) {
sp <- sample(ipod, 25)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
library(ggplot2)
library(plotly)
plot <- value %>%
ggplot(aes(x = result)) +
geom_histogram(fill = "#FBF4E9", color="#6ECB63", alpha=1, bins = 10) +
labs(title = "Sample",
x = "Value",
y = "Count") +
theme_bw() +
theme(axis.text.x = element_text(vjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
up6 <- filter(value, value$result >= 6)
up6
result <- length(up6$result)/length(value$result)
result
# a
result <- c()
for (x in 1:30) {
sp <- sample(ipod, 30)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
library(ggplot2)
library(plotly)
plot <- value %>%
ggplot(aes(x = result)) +
geom_histogram(fill = "#FBF4E9", color="#6ECB63", alpha=1, bins = 10) +
labs(title = "Sample",
x = "Value",
y = "Count") +
theme_bw() +
theme(axis.text.x = element_text(vjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
up6 <- filter(value, value$result >= 6)
up6
result <- length(up6$result)/length(value$result)
result
Group <- sample(rep(1, 18), rep(2, 14))
Group
Group <- sample(c(rep(1, 18), rep(2, 14)))
Group
Group <- c(rep(1, 18), rep(2, 14))
Group
group <- c(rep(1, 18), rep(2, 14))
Group <- group
Group[group = 1] <- "Urban"
Group[group = 2] <- "Rural"
Group
# Tao ID
ID <- c(1:18, 1:14)
group <- c(rep(1, 18), rep(2, 14))
Group <- group
Group[group = 1] <- "Urban"
Group[group = 2] <- "Rural"
Group
Group[group == 1] <- "Urban"
Group[group == 2] <- "Rural"
Group
ID <- c(1:18, 1:14)
group <- c(rep(1, 18), rep(2, 14))
Group <- group
Group[group == 1] <- "Urban"
Group[group == 2] <- "Rural"
Age <- c(109, 113, 115, 116, 119, 120, 121, 124, 126, 129,
130, 133, 134, 135, 137, 139, 141, 142, 121, 121,
128, 129, 131, 132, 133, 134, 138, 138, 138, 140,
140, 140)
Height <- c(137.6, 147.8, 136.8, 140.7, 132.7, 145.4, 135.0, 133.0, 148.5,
148.3, 147.5, 148.8, 133.2, 148.7, 152.0, 150.6, 165.3, 149.9,
139.0, 140.9, 134.9, 149.5, 148.7, 131.0, 142.3, 139.9, 142.9,
147.7, 147.7, 134.6, 135.8, 148.5)
data <- data.frame(Group, ID, Age, Height)
data
View(data)
# Kiem dinh chung minh co su khac biet ve do tuoi
model1 <- lm(Height ~ Group + Age + Group:Age)
View(model1)
View(model1)
model2 <- lm(Height ~ Group + Age)
model3 <- lm(Height ~ Age)
anova(model1, model2, model3)
summary(model2)
View(data)
# Tao data
ID <- c(1:18, 1:14)
group <- c(rep(1, 18), rep(2, 14))
Group <- group
Group[group == 1] <- "Urban"
Group[group == 2] <- "Rural"
Group <- as.factor(Group)
Age <- c(109, 113, 115, 116, 119, 120, 121, 124, 126, 129,
130, 133, 134, 135, 137, 139, 141, 142, 121, 121,
128, 129, 131, 132, 133, 134, 138, 138, 138, 140,
140, 140)
Height <- c(137.6, 147.8, 136.8, 140.7, 132.7, 145.4, 135.0, 133.0, 148.5,
148.3, 147.5, 148.8, 133.2, 148.7, 152.0, 150.6, 165.3, 149.9,
139.0, 140.9, 134.9, 149.5, 148.7, 131.0, 142.3, 139.9, 142.9,
147.7, 147.7, 134.6, 135.8, 148.5)
data <- data.frame(Group, ID, Age, Height)
data
View(data)
model1 <- lm(Height ~ Group + Age + Group:Age)
model2 <- lm(Height ~ Group + Age)
model3 <- lm(Height ~ Age)
anova(model1, model2, model3)
summary(model2)
# library
library(rgl)
library(ggplot2)
# Data: the iris data is provided by R
data <- iris
# Add a new column with color
mycolors <- c('royalblue1', 'darkcyan', 'oldlace')
data$color <- mycolors[ as.numeric(data$Species) ]
# Plot
plot3d(
x=data$`Sepal.Length`, y=data$`Sepal.Width`, z=data$`Petal.Length`,
col = data$color,
type = 's',
radius = .1,
xlab="Sepal Length", ylab="Sepal Width", zlab="Petal Length")
# To save to a file:
htmlwidgets::saveWidget(rglwidget(width = 520, height = 520),
file = "HtmlWidget/3dscatter.html",
libdir = "libs",
selfcontained = FALSE
)
library(plotly)
View(data.frame(volcano))
library(plotly)
View(data.frame(volcano))
test <- FordRanger[c(5, 6, 10)]
test <- as.matrix(test)
# volcano is a numeric matrix that ships with R
fig <- plot_ly(z = ~test)
fig <- fig %>% add_surface()
fig
# Chuyen sang thu muc lam viec
setwd('C:/Users/ASUS/OneDrive/Máy tính/Crawler')
# Khai bao thu vien
library(ggplot2)
library(plotly)
library(gapminder)
library(tidyverse)
library(viridis)
library(hrbrthemes)
library(dplyr)
library(plyr)
library(readr)
# Nhap du lieu
my_file <- list.files(pattern = "*.csv")
data <- ldply(my_file, read_csv)
# Xem du lieu
head(data, 10)
names(data)
str(data)
data$time_up <- as.Date(data$time_up, "%d/%m/%Y")
cols <- c("trademark", "brand", "style", "fuel")
data[cols] <- lapply(data[cols], factor)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#'
#' Phan tich thong ke mo ta
#'
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# summary
summary(data)
# table
table(data$trademark)    # So luong xe cua moi hang dang duoc rao ban
table(data$style)    # Phân khúc xe dang duoc rao ban
table(data$box_car)    # Hop so xe
table(data$local)    # Tinh thanh ban xe
table(data$year_product)    # Nam san xuat xe
# quantile
quantile(data$price)    # Tu phan vi gia xe
quantile(data$KM)    # Tu phan vi so km da di
# correlation
cor(data[c(5, 6, 10)], use = "everything", method = "pearson")
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#'
#' Ve bieu do
#'
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
library(ggthemes) # -> thu vien theme
# How does KM effect car price?
Ford <- filter(data, data$trademark == "Ford")
View(data)
count <- table(data$trademark)
count
count <- data.frame(count)
View(count)
install.packages('epiDisplay')
tab1(data$trademark, sort.group = "decreasing", cum.percent = TRUE)
tab1
library(epiDisplay)
tab1(data$trademark, sort.group = "decreasing", cum.percent = TRUE)
tab1(data$trademark, sort.group = "decreasing")
tab1
tab1(data$trademark, sort.group = "decreasing")
tab1
tab1 <- table(data$trademark)
tab1 <- data.frame(tab1)
View(tab1)
colnames(tab1) <- c('Trademark')
View(tab1)
colnames(tab1) <- c('Trademark', 'Freq')
View(tab1)
# Bieu do so luong xe cac hang dang rao ban
p1 <- tab1 %>%
mutate(Trade = fct_reorder(Trademark, Freq)) %>%
ggplot( aes(x = Trade, y = Freq,)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
labs(title = "Case Fatality Ratio of Province in US",
x = "Trademark",
y = "") +
coord_flip() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = 'white'),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(p1, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# Bieu do so luong xe cac hang dang rao ban
p1 <- tab1 %>%
mutate(Trade = fct_reorder(Trademark, Freq)) %>%
ggplot(aes(x = Trade,
y = Freq,
fill = Trademark)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
labs(title = "Case Fatality Ratio of Province in US",
x = "Trademark",
y = "") +
coord_flip() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = 'white'),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(p1, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# Bieu do so luong xe cac hang dang rao ban
p1 <- tab1 %>%
mutate(Trade = fct_reorder(Trademark, Freq)) %>%
head(20) %>%
ggplot(aes(x = Trade,
y = Freq,
fill = Trademark)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
labs(title = "Numbers of cars of brands for sales",
x = "Trademark",
y = "Count") +
coord_flip() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = 'white'),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(p1, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# Bieu do so luong xe cac hang dang rao ban
p1 <- tab1 %>%
mutate(Trade = fct_reorder(Trademark, Freq)) %>%
arrange(Freq) %>%
head(20) %>%
ggplot(aes(x = Trade,
y = Freq,
fill = Trademark)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
labs(title = "Numbers of cars of brands for sales",
x = "Trademark",
y = "Count") +
coord_flip() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = 'white'),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(p1, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# Bieu do so luong xe cac hang dang rao ban
p1 <- tab1 %>%
mutate(Trade = fct_reorder(Trademark, Freq)) %>%
arrange(Freq) %>%
head(20) %>%
ggplot(aes(x = Trademark,
y = Freq,
fill = Trademark)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
labs(title = "Numbers of cars of brands for sales",
x = "Trademark",
y = "Count") +
coord_flip() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = 'white'),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(p1, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# Bieu do so luong xe cac hang dang rao ban
p1 <- tab1 %>%
mutate(Trade = fct_reorder(Trademark, Freq)) %>%
ggplot(aes(x = Trade,
y = Freq,
fill = Trademark)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
labs(title = "Numbers of cars of brands for sales",
x = "Trademark",
y = "Count") +
coord_flip() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = 'white'),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(p1, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# Bieu do so luong xe cac hang dang rao ban
p1 <- head(tab1, 20) %>%
mutate(Trade = fct_reorder(Trademark, Freq)) %>%
ggplot(aes(x = Trade,
y = Freq,
fill = Trademark)) +
geom_bar(stat="identity", fill="#f68060", alpha=.6, width=.4) +
labs(title = "Numbers of cars of brands for sales",
x = "Trademark",
y = "Count") +
coord_flip() +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = 'white'),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(p1, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
View(tab1)
sort(tab1, decreasing = FALSE)
View(tab1)
tab1 <- sort(tab1, decreasing = FALSE)
View(tab1)
install.packages("rmarkdown")
install.packages("rmarkdown")
render("test.Rmd")
unlink("testR_cache", recursive = TRUE)
setwd('C:/Users/ASUS/OneDrive/Máy tính/Crawler')
setwd('C:/Users/ASUS/OneDrive/Máy tính/Crawler')
setwd('C:/Users/ASUS/OneDrive/Máy tính/Crawler')
setwd('C:/Users/ASUS/OneDrive/Máy tính/Crawler')
setwd('C:/Users/ASUS/OneDrive/Máy tính/Crawler')
setwd('C:/Users/ASUS/OneDrive/Máy tính/Crawler')
print("Heelo")
setwd('C:/Users/ASUS/OneDrive/Máy tính/Crawler')
print("Heelo")
options(encoding = 'UTF-8')
render("exam.Rmd")
---
title: "Magma Demo"
output: html_document
---
```{r include = FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
```{r message = FALSE, warning = FALSE}
library(viridis)
```
The code below demonstrates the Magma palette in the [viridis](https://github.com/sjmgarnier/viridis) package. It displays a contour map of the Maunga Whau volcano in Auckland, New Zealand.
```{r fig.cap = "The Maunga Whau volcano, Auckland."}
image(volcano, col = viridis(200, option = "A"))
```
render("exam.Rmd")
library(rmarkdown)
render("exam.Rmd")
library(rmarkdown)
render("exam.Rmd")
setwd('C:/Users/ASUS/OneDrive/Máy tính/Crawler')
View(data)
View(data)
