# b
proportion <- function(x, y) {
count <- 0
for (item in x) {
if item >= 6 {
count <- count + 1}
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
}
# b
proportion <- function(x, y) {
count <- 0
for (item in x) {
if item >= 6 {
count <- count + 1}
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
}
if (item >= 6) {
count <- count + 1}
for (item in 1:x) {
if (item >= 6) {
count <- count + 1}
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
count <- c(count, item)
# b
proportion <- function(x, y) {
for (item in 1:x) {
if (item >= 6) {
count <- c(count, item)
}
result <- length(x)/count
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
}
# b
proportion <- function(x, y) {
for (item in 1:x) {
if (item >= 6) {
count <- c(count, item)
}
result <- length(x)/length(count)
return("Ti le bai hat co do dai tu 6 phut tro len la: ", result)
}
proportion(value, 6)
proportion(value, 6)
sample(ipod, 20)
# b
proportion <- function(x, y) {
for (item in 1:x) {
if (item >= 6) {
count <- c(count, item)
}
result <- length(x)/length(count)
return(print("Ti le bai hat co do dai tu 6 phut tro len la: ", result))
}
proportion(value, 6)
# b
proportion <- function(x, y) {
for (item in 1:length(x)) {
if (item >= 6) {
count <- c(count, item)
}
result <- length(x)/length(count)
return(print("Ti le bai hat co do dai tu 6 phut tro len la: ", result))
}
proportion(value, 6)
# b
count(value)
# b
count(value)
ipod <- sample(c(rep(1, 250),
rep(2, 300),
rep(3, 600),
rep(4, 800),
rep(5, 550),
rep(6, 350),
rep(7, 100),
rep(8, 25),
rep(9, 20),
rep(10, 5)))
# a
result <- c()
for (x in 1:50) {
sp <- sample(ipod, 25)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
+
}
ipod <- sample(c(rep(1, 250),
rep(2, 300),
rep(3, 600),
rep(4, 800),
rep(5, 550),
rep(6, 350),
rep(7, 100),
rep(8, 25),
rep(9, 20),
rep(10, 5)))
# a
result <- c()
for (x in 1:50) {
sp <- sample(ipod, 25)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
library(ggplot2)
library(plotly)
plot <- value %>%
ggplot(aes(x = result)) +
geom_histogram(fill = "#FBF4E9", color="#6ECB63", alpha=1, bins = 10) +
labs(title = "Sample",
x = "Value",
y = "Count") +
theme_bw() +
theme(axis.text.x = element_text(vjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
count(value)
# b
propor <- function(x, y) {
for (item in 1:length(x)) {
count <- 0
if (item >= 6) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value, 6)
# b
propor <- function(x, y) {
for (item in x) {
count <- 0
if (item >= 6) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value, 6)
propor(value$result, 6)
# b
propor <- function(x, y) {
for (item in 1:length(x)) {
count <- 0
if (item >= 6) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value$result, 6)
table(value)
# b
propor <- function(x, y) {
for (item in 1:length(x)) {
count <- 0
if (item >= y) {
count <- count + 1
}
}
return(result <- count/length(x))
}
propor(value$result, 6)
length(value$result >= 6)
# b
up6 <- value(value$result >= 6)
# b
up6 <- value$result >= 6
# b
up6 <- filter(value, value$result >= 6)
up6
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", length(up6)/length(value))
# b
up6 <- filter(value, value$result >= 6)
up6
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", length(up6)/length(value))
length(up6)
length(value)
View(up6)
length(up6$result)
result <- length(up6$result)/length(value$result)
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", result)
result <- length(up6$result)/length(value$result)
result
print("Tỉ lệ bài hát có độ dài trên 6 phút là: ", result)
print(result)
print("Ti le", result)
# a
result <- c()
for (x in 1:500) {
sp <- sample(ipod, 25)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
library(ggplot2)
library(plotly)
plot <- value %>%
ggplot(aes(x = result)) +
geom_histogram(fill = "#FBF4E9", color="#6ECB63", alpha=1, bins = 10) +
labs(title = "Sample",
x = "Value",
y = "Count") +
theme_bw() +
theme(axis.text.x = element_text(vjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
up6 <- filter(value, value$result >= 6)
up6
result <- length(up6$result)/length(value$result)
result
# a
result <- c()
for (x in 1:30) {
sp <- sample(ipod, 30)
result <- c(result, sp)
}
result
hist(result)
value <- data.frame(result)
library(ggplot2)
library(plotly)
plot <- value %>%
ggplot(aes(x = result)) +
geom_histogram(fill = "#FBF4E9", color="#6ECB63", alpha=1, bins = 10) +
labs(title = "Sample",
x = "Value",
y = "Count") +
theme_bw() +
theme(axis.text.x = element_text(vjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title = element_text(hjust = 0.5, size = 18),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill="lightblue",
size=0.5, linetype="solid",
colour ="darkblue"),
panel.border = element_rect(colour = '#990000', fill = NA, size = 1.5))
ggplotly(plot, dynamicTicks = TRUE) %>%
rangeslider() %>%
layout(hovermode = "x")
# b
up6 <- filter(value, value$result >= 6)
up6
result <- length(up6$result)/length(value$result)
result
x <- rnorm(10)
x
x == 5
y == 5
y <- 5
y == 5
setwd("C:/Users/ASUS/Desktop/R")
setwd("C:/Users/ASUS/OneDrive/Máy tính/R")
data <- read.table("igf.txt", header = TRUE)
data
View(data)
female <- subset(data, sex == "Female")
female
View(data)
View(female)
male <- filter(data, sex == "Male")
male
male <- filter(data, data$sex == "Male")
male
male <- filter(data, data$sex == "Male")
male
male <- filter(data, data$sex = "Male")
male <- filter(data, data$sex == "Male")
male
fmale <- filter(data, data$sex == "Female")
fmale
data
data <- read.table("igf.txt", header = TRUE)
data
fmale <- filter(data, data$sex == "Female")
fmale
fmale <- data.frame(fmale)
fmale
View(fmale)
fmale <- filter(data, data$sex == c("Female"))
fmale
fmale <- filter(data, sex == "Female")
fmale
library(dplyr)
fmale <- filter(data, sex == "Female")
fmale
# Chiet suat du lieu
# a. subset()
male = subset(data, sex == "Male")
male
# Chiet suat du lieu
# a. subset()
male = subset(data, sex = "Male")
# Load dataset
data <- read.table("igf.txt", header = TRUE)
data
# Chiet suat du lieu
# a. subset()
male = subset(data, sex = "Male")
male
# Chiet suat du lieu
# a. subset()
male = subset(data, sex == "Male")
male
# b. Su dung filter() tu thu vien dplyr
library(dplyr)
female = filter(data, sex = "Female")
female
female = filter(data, data$sex = "Female")
female = filter(data, sex == "Female")
female
print(arg)
print(args)
print(args(data))
names(data)
str(data)
# Chiet so lieu tu mot dataframe
data2 <- data[, c(1, 2, 3)]
data2
# Nhap 2 dataframe thanh mot.
data3 <- merge(female, male, by = "id", all = TRUE)
data3
View(data3)
rep(6.5, 7))
# Bien doi du lieu
point <- sample(c(rep(3, 7),
rep(5, 3),
rep(9, 9),
rep(10, 4),
rep(6.5, 7)))
point
letter.grade <- point
letter.grade <- point
lettergrade[point <  5] <- D
lettergrade[point > 5 & point <=  6.5] <- C
lettergrade[point > 6.5 & point <= 8.5] <- B
lettergrade <- point
lettergrade[point <  5] <- D
lettergrade[point > 5 & point <=  6.5] <- C
lettergrade[point > 6.5 & point <= 8.5] <- B
lettergrade[point >= 8.5] <- A
point <- data.frame(point, lettergrade)
lettergrade[point <  5] <- "D"
lettergrade[point > 5 & point <=  6.5] <- "C"
lettergrade[point > 6.5 & point <= 8.5] <- "B"
lettergrade[point >= 8.5] <- "A"
point <- data.frame(point, lettergrade)
point
# Bien doi du lieu
point <- sample(c(rep(3, 7),
rep(5, 3),
rep(9, 9),
rep(10, 4),
rep(6.5, 7)))
point
lettergrade <- point
lettergrade[point <  5] <- "D"
lettergrade[point > 5 & point <=  6.5] <- "C"
lettergrade[point > 6.5 & point <= 8.5] <- "B"
lettergrade[point >= 8.5] <- "A"
point <- data.frame(point, lettergrade)
point
## b. Su dung replace
lg <- point
lg <- replace(lg, point < 5, "D")
lg <- replace(lg, point > 5 & point <=  6.5 , "C")
lg <- replace(lg, point > 6.5 & point <= 8.5, "B")
lg <- replace(lg, point >= 8.5, "A")
point <- data.frame(point, lg)
point
## b. Su dung replace
point1 <- sample(c(rep(3, 7),
rep(5, 3),
rep(9, 9),
rep(10, 4),
rep(6.5, 7)))
point1
lg <- replace(lg, point1 < 5, "D")
lg <- replace(lg, point1 > 5 & point <=  6.5 , "C")
## b. Su dung replace
point1 <- sample(c(rep(3, 7),
rep(5, 3),
rep(9, 9),
rep(10, 4),
rep(6.5, 7)))
lg <- point1
lg <- replace(lg, point1 < 5, "D")
lg <- replace(lg, point1 > 5 & point <=  6.5 , "C")
lg <- replace(lg, point1 > 6.5 & point <= 8.5, "B")
lg <- replace(lg, point1 >= 8.5, "A")
point <- data.frame(point1, lg)
point
point1 <- data.frame(point1, lg)
point1
## b. Su dung replace
point1 <- sample(c(rep(3, 7),
rep(5, 3),
rep(9, 9),
rep(10, 4),
rep(6.5, 7)))
point1
lg <- point1
lg <- replace(lg, point1 < 5, "D")
lg <- replace(lg, point1 > 5 & point <=  6.5 , "C")
lg <- replace(lg, point1 > 6.5 & point <= 8.5, "B")
lg <- replace(lg, point1 >= 8.5, "A")
point1 <- data.frame(point1, lg)
point1
# Load dataset
data <- read.table("igf.txt", header = TRUE)
data
# Xem thong tin du lieu
names(data)
str(data)
# Tach roi du lieu
## a. subset()
male = subset(data, sex == "Male")
male
## b. Su dung filter() tu thu vien dplyr
library(dplyr)
female = filter(data, sex == "Female")
female
# Chiet so lieu tu mot dataframe
## Lay du lieu 3 cot dau tien
data2 <- data[, c(1, 2, 3)]
data2
# Nhap 2 dataframe thanh mot.
data3 <- merge(female, male, by = "id", all = TRUE)
data3
# Bien doi du lieu
## a.
point <- sample(c(rep(3, 7),
rep(5, 3),
rep(9, 9),
rep(10, 4),
rep(6.5, 7)))
point
lettergrade <- point
lettergrade[point <  5] <- "D"
lettergrade[point > 5 & point <=  6.5] <- "C"
lettergrade[point > 6.5 & point <= 8.5] <- "B"
lettergrade[point >= 8.5] <- "A"
point <- data.frame(point, lettergrade)
point
## b. Su dung replace
point1 <- sample(c(rep(3, 7),
rep(5, 3),
rep(9, 9),
rep(10, 4),
rep(6.5, 7)))
point1
lg <- point1
lg <- replace(lg, point1 < 5, "D")
lg <- replace(lg, point1 > 5 & point <=  6.5 , "C")
lg <- replace(lg, point1 > 6.5 & point <= 8.5, "B")
lg <- replace(lg, point1 >= 8.5, "A")
point1 <- data.frame(point1, lg)
point1
?replace()
bmd <- c(-0.92,0.21,0.17,-3.21,-1.80,-2.60,-2.00,1.71,2.12,-2.11)
# tạm thời cho biến số diagnosis bằng bmd
diagnosis <- bmd
# biến đổi bmd thành diagnosis
diagnosis[bmd <= -2.5] <- 1
diagnosis[bmd > -2.5 & bmd <= 1.0] <- 2
diagnosis[bmd > -1.0] <- 3
# tạo thành một data frame
data <- data.frame(bmd, diagnosis)
# liệt kê để kiểm tra xem lệnh có hiệu quả không
data
diagnosis <- bmd
diagnosis <- replace(diagnosis, bmd <= -2.5, 1)
diagnosis <- replace(diagnosis, bmd > -2.5 & bmd <= 1.0, 2)
diagnosis <- replace(diagnosis, bmd > -1.0, 3)
data
diagnosis <- bmd
diagnosis <- replace(diagnosis, bmd <= -2.5, "A")
diagnosis <- replace(diagnosis, bmd > -2.5 & bmd <= 1.0, "B")
diagnosis <- replace(diagnosis, bmd > -1.0, "C")
data
