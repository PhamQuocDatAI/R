fig
fig <- Bel %>% plot_ly(x = ~ Last_Update, type="ohlc",
open = ~Confirmed, close = ~Deaths,
high = ~Recovered, low = ~Active)
fig <- fig %>% layout(title = "Basic OHLC Chart",
xaxis = list(rangeslider = list(visible = F)))
View(Bel)
# Plot
treemap(covid,
# data
index="Province_State",
vSize="Deaths",
type="index",
# Main
title="",
palette="Dark2",
# Borders:
border.col=c("black"),
border.lwds=1,
# Labels
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T                        # If true, labels are bigger when rectangle is bigger.
)
# Plot
p <- treemap(covid,
# data
index="Province_State",
vSize="Deaths",
type="index",
# Main
title="",
palette="Dark2",
# Borders:
border.col=c("black"),
border.lwds=1,
# Labels
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T)
ggplotly(p)
# Plot
p19 <- treemap(covid,
# data
index="Province_State",
vSize="Deaths",
type="index",
# Main
title="COVID deaths in US 01-01-2021",
palette="Dark2",
# Borders:
border.col=c("black"),
border.lwds=1,
# Labels
fontsize.labels=0.5,
fontcolor.labels="white",
fontface.labels=1,
bg.labels=c("transparent"),
align.labels=c("left", "top"),
overlap.labels=0.5,
inflate.labels=T)
ggplotly(p19)
# Create dataset
data=data.frame(
individual=paste( "Mister ", seq(1,30), sep=""),
group=c( rep('A', 10), rep('C', 14), rep('D', 6)) ,
value=sample( seq(10,100), 30, replace=T)
)
data = data %>% arrange(group, value)
# Set a number of 'empty bar' to add at the end of each group
empty_bar=1
to_add = data.frame( matrix(NA, empty_bar*nlevels(data$group), ncol(data)) )
colnames(to_add) = colnames(data)
to_add$group=rep(levels(data$group), each=empty_bar)
data=rbind(data, to_add)
data=data %>% arrange(group)
data$id=seq(1, nrow(data))
# Get the name and the y position of each label
label_data=data
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust<-ifelse( angle < -90, 1, 0)
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# Make the plot
p = ggplot(data, aes(x=as.factor(id), y=value, fill=group)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
geom_bar(aes(x=as.factor(id), y=value, fill=group), stat="identity", alpha=0.5) +
ylim(-10,120) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=value+10, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
p
ggplotly(p)
p
library(plotly)
x= list("Sales", "Consulting", "Net revenue", "Purchases", "Other expenses", "Profit before tax")
measure= c("relative", "relative", "total", "relative", "relative", "total")
text= c("+60", "+80", "", "-40", "-20", "Total")
y= c(60, 80, 0, -40, -20, 0)
data = data.frame(x=factor(x,levels=x),measure,text,y)
fig <- plot_ly(
data, name = "20", type = "waterfall", measure = ~measure,
x = ~x, textposition = "outside", y= ~y, text =~text,
connector = list(line = list(color= "rgb(63, 63, 63)")))
fig <- fig %>%
layout(title = "Profit and loss statement 2018",
xaxis = list(title = ""),
yaxis = list(title = ""),
autosize = TRUE,
showlegend = TRUE)
fig
View(data)
View(Vietnam)
Vietnam1 <- Vietnam[,c(4, 5, 8)]
View(Vietnam1)
x <- Vietnam["Confirmed"]
View(x)
fig <- plot_ly(
Vietnam1, name = "20", type = "waterfall", measure = ~measure,
x = ~Last_Update, textposition = "outside", y= ~Confirmed,
connector = list(line = list(color= "rgb(63, 63, 63)")))
fig <- fig %>%
layout(title = "Profit and loss statement 2018",
xaxis = list(title = ""),
yaxis = list(title = ""),
autosize = TRUE,
showlegend = TRUE)
fig
fig <- plot_ly(
Vietnam1, name = "20", type = "waterfall",
x = ~Last_Update, textposition = "outside", y= ~Confirmed,
connector = list(line = list(color= "rgb(63, 63, 63)")))
fig <- fig %>%
layout(title = "Profit and loss statement 2018",
xaxis = list(title = ""),
yaxis = list(title = ""),
autosize = TRUE,
showlegend = TRUE)
fig
fig
ggplotly(fig)
fig <- plot_ly(
Vietnam1, name = "20", type = "waterfall",
x = ~Last_Update, textposition = "outside", y= ~Recovered,
connector = list(line = list(color= "rgb(63, 63, 63)")))
fig <- fig %>%
layout(title = "Profit and loss statement 2018",
xaxis = list(title = ""),
yaxis = list(title = ""),
autosize = TRUE,
showlegend = TRUE)
fig
fig <- plot_ly(
Vietnam, name = "20", type = "waterfall",
x = ~Last_Update, textposition = "outside", y= ~Recovered,
connector = list(line = list(color= "rgb(63, 63, 63)")))
fig <- fig %>%
layout(title = "Profit and loss statement 2018",
xaxis = list(title = ""),
yaxis = list(title = ""),
autosize = TRUE,
showlegend = TRUE)
fig
fig <- plot_ly(
Vietnam, name = "20", type = "waterfall",
x = ~Last_Update, textposition = "outside", y= ~Active,
connector = list(line = list(color= "rgb(63, 63, 63)")))
fig <- fig %>%
layout(title = "Profit and loss statement 2018",
xaxis = list(title = ""),
yaxis = list(title = ""),
autosize = TRUE,
showlegend = TRUE)
fig
fig <- plot_ly(
Bel, name = "20", type = "waterfall",
x = ~Last_Update, textposition = "outside", y= ~Active,
connector = list(line = list(color= "rgb(63, 63, 63)")))
fig <- fig %>%
layout(title = "Profit and loss statement 2018",
xaxis = list(title = ""),
yaxis = list(title = ""),
autosize = TRUE,
showlegend = TRUE)
fig
fig <- plot_ly(
Bel, name = "20", type = "waterfall",
x = ~Last_Update, textposition = "outside", y= ~Active,
connector = list(line = list(color= ~ Province_State)))
fig <- fig %>%
layout(title = "Profit and loss statement 2018",
xaxis = list(title = ""),
yaxis = list(title = ""),
autosize = TRUE,
showlegend = TRUE)
fig
library(plotly)
x= list("Sales", "Consulting", "Net revenue", "Purchases", "Other expenses", "Profit before tax")
measure= c("relative", "relative", "total", "relative", "relative", "total")
text= c("+60", "+80", "", "-40", "-20", "Total")
y= c(60, 80, 0, -40, -20, 0)
data = data.frame(x=factor(x,levels=x),measure,text,y)
fig <- plot_ly(
Bel, name = "20", type = "waterfall",
x = ~Last_Update, textposition = "outside", y= ~Active,
connector = list(line = list(color= ~ Province_State)))
fig <- fig %>%
layout(title = "Profit and loss statement 2018",
xaxis = list(title = ""),
yaxis = list(title = ""),
autosize = TRUE,
showlegend = TRUE)
fig
library(plotly)
library(gapminder)
df <- gapminder
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig <- fig %>% layout(
xaxis = list(
type = "log"
)
)
fig
library(plotly)
library(gapminder)
fig <- Bel %>%
plot_ly(
x = ~Deaths,
y = ~Recovered,
#size = ~pop,
color = ~Province_State,
frame = ~Last_Update,
text = ~Province_State,
hoverinfo = "Province_State",
type = 'scatter',
mode = 'markers'
)
fig <- fig %>% layout(
xaxis = list(
type = "log"
)
)
fig
# Libraries
library(tidyverse)
library(hrbrthemes)
library(circlepackeR)
# Load dataset from github
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/11_SevCatOneNumNestedOneObsPerGroup.csv", header=T, sep=";")
data[ which(data$value==-1),"value"] <- 1
colnames(data) <- c("Continent", "Region", "Country", "Pop")
# Remove a few problematic lines
data <- data %>% filter(Continent!="") %>% droplevels()
# Change the format. This use the data.tree library. This library needs a column that looks like root/group/subgroup/..., so I build it
library(data.tree)
data$pathString <- paste("world", data$Continent, data$Region, data$Country, sep = "/")
population <- as.Node(data)
# You can custom the minimum and maximum value of the color range.
circlepackeR(population, size = "Pop", color_min = "hsl(56,80%,80%)", color_max = "hsl(341,30%,40%)")
install.packages("circlepackerR")
library(circlepackeR)
install.packages("circlepackeR")
library(circlepackeR)
# Load dataset from github
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/11_SevCatOneNumNestedOneObsPerGroup.csv", header=T, sep=";")
data[ which(data$value==-1),"value"] <- 1
colnames(data) <- c("Continent", "Region", "Country", "Pop")
# Remove a few problematic lines
data <- data %>% filter(Continent!="") %>% droplevels()
# Change the format. This use the data.tree library. This library needs a column that looks like root/group/subgroup/..., so I build it
library(data.tree)
data$pathString <- paste("world", data$Continent, data$Region, data$Country, sep = "/")
population <- as.Node(data)
# You can custom the minimum and maximum value of the color range.
circlepackeR(population, size = "Pop", color_min = "hsl(56,80%,80%)", color_max = "hsl(341,30%,40%)")
install.packages('circlepackeR')
x
Bel
View(Vietnam1)
Vietnam1[2,]
x <- Vietnam1["Confirmed"]
x[,2]
x[2,]
Vietnam1[2,]
x <- Vietnam1["Confirmed"]
x[2,]
text = c(1473)
for (i in 2:length(x)) {
text <- c(text, (x[i] - x[i-1]))
}
text = c(1473)
for (i in 2:length(x)) {
text <- c(text, (x[i,] - x[i-1,]))
}
text
for (i in 2:length(x,)) {
text <- c(text, (x[i,] - x[i-1,]))
}
length(x)
x <- Vietnam1["Confirmed"]
length(x)
length(Vietnam1["Confirmed"])
for (i in 2:59) {
text <- c(text, (x[i,] - x[i-1,]))
}
text
Vietnam1[2,]
x <- Vietnam1["Confirmed"]
x[2,]
text = c()
length(Vietnam1["Confirmed"])
for (i in 2:59) {
text <- c(text, (x[i,] - x[i-1,]))
}
text
text = c(1471)
length(Vietnam1["Confirmed"])
for (i in 2:59) {
text <- c(text, (x[i,] - x[i-1,]))
}
text
text = c()
length(Vietnam1["Confirmed"])
for (i in 1:59) {
text <- c(text, (x[i,] - x[i-1,]))
}
text
text = c(1474)
length(Vietnam1["Confirmed"])
for (i in 1:59) {
text <- c(text, (x[i,] - x[i-1,]))
}
text
Vietnam1 <- rbind(Vietnam1, text)
text <- as.numeric(text)
Vietnam1 <- rbind(Vietnam1, text)
text <- data.frame(text)
text
View(text)
Vietnam1 <- rbind(Vietnam1, text)
Vietnam1 <- cbind(Vietnam1, text)
Vietnam1[2,]
x <- Vietnam1["Confirmed"]
x[2,]
text = c(1474)
length(Vietnam1["Confirmed"])
for (i in 1:59) {
text <- c(text, (x[i,] - x[i-1,]))
}
text
Vietnam1 <- cbind(Vietnam1, text)
View(Vietnam1)
x <- Vietnam1["Confirmed"]
View(Vietnam)
Vietnam1 <- Vietnam[,c(4, 5, 8)]
text = c(1474)
length(Vietnam1["Confirmed"])
for (i in 1:59) {
text <- c(text, (x[i,] - x[i-1,]))
}
text
Vietnam1 <- cbind(Vietnam1, text)
View(Vietnam1)
Vietnam1 <- Vietnam[,c(4, 5, 8)]
increase = c(1474)
length(Vietnam1["Confirmed"])
for (i in 1:59) {
increase <- c(increase, (x[i,] - x[i-1,]))
}
text
Vietnam1 <- cbind(Vietnam1, increase)
View(Vietnam1)
fig <- plot_ly(Vietnam1, x = ~Last_Update, y = ~text,
type = "waterfall", base = 300,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
fig <- fig %>%
layout(title = "Profit and loss statement", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
fig
fig <- plot_ly(Vietnam1, x = ~Last_Update, y = ~ increase,
type = "waterfall", base = 300,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
fig <- fig %>%
layout(title = "Profit and loss statement", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
fig
Vietnam2 <- Vietnam1[1:14,]
fig <- plot_ly(Vietnam2, x = ~Last_Update, y = ~ increase,
type = "waterfall", base = 300,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
fig <- fig %>%
layout(title = "Profit and loss statement", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
fig
Vietnam1 <- Vietnam[,c(4, 5, 8)]
increase = c(0)
length(Vietnam1["Confirmed"])
for (i in 1:59) {
increase <- c(increase, (x[i,] - x[i-1,]))
}
Vietnam1 <- cbind(Vietnam1, increase)
Vietnam2 <- Vietnam1[1:14,]
fig <- plot_ly(Vietnam2, x = ~Last_Update, y = ~ increase,
type = "waterfall", base = 300,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
fig <- fig %>%
layout(title = "Profit and loss statement", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
fig
fig <- plot_ly(Vietnam1, x = ~Last_Update, y = ~ increase,
type = "waterfall", base = 300,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
fig <- fig %>%
layout(title = "Profit and loss statement", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
fig
fig <- plot_ly(Vietnam2, x = ~Last_Update, y = ~ increase,
type = "waterfall", base = 300,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
fig <- fig %>%
layout(title = "Profit and loss statement", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
fig
fig <- plot_ly(Vietnam2, x = ~Last_Update, y = ~ increase,
type = "waterfall", base = 0,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
fig <- fig %>%
layout(title = "Profit and loss statement", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
fig
fig <- plot_ly(Vietnam2, x = ~Last_Update, y = ~ increase,
type = "waterfall", base = 1474,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
fig <- fig %>%
layout(title = "Profit and loss statement", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
fig
Vietnam1 <- Vietnam[,c(4, 5, 8)]
increase = c(0)
length(Vietnam1["Confirmed"])
for (i in 1:59) {
increase <- c(increase, (x[i,] - x[i-1,]))
}
Vietnam1 <- cbind(Vietnam1, increase)
Vietnam2 <- Vietnam1[1:14,]
fig <- plot_ly(Vietnam2, x = ~Last_Update, y = ~ increase,
type = "waterfall", base = 1474,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
fig <- fig %>%
layout(title = "COVID19 in Viet Nam (2 weeks)", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
fig
Vietnam1 <- Vietnam[,c(4, 5, 8)]
increase = c(0)
length(Vietnam1["Confirmed"])
for (i in 1:59) {
increase <- c(increase, (x[i,] - x[i-1,]))
}
Vietnam1 <- cbind(Vietnam1, increase)
Vietnam2 <- Vietnam1[1:14,]
p20 <- plot_ly(Vietnam2, x = ~Last_Update, y = ~ increase,
type = "waterfall", base = 1474,
decreasing = list(marker = list(color = "Maroon", line = list(color = "red", width = 2))),
increasing = (marker = list(color = "Teal")),
totals = list(marker = list(color = "deep sky blue", line = list(color = 'blue', width = 3))))
p20 <- p20 %>%
layout(title = "COVID19 in Viet Nam (2 weeks)", xaxis = list(title = "", tickfont = "16", ticks = "outside"),
yaxis = list(title = ""), waterfallgap = "0.3")
p20
